$date
	Tue Jun 10 23:49:57 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module top_tb $end
$var wire 1 ! flag $end
$var wire 5 " R [4:0] $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$scope module uut $end
$var wire 5 % R [4:0] $end
$var wire 1 # clk $end
$var wire 1 ! flag $end
$var wire 1 $ reset $end
$var wire 5 & R_result [4:0] $end
$var wire 1 ' R_ZF $end
$var wire 1 ( OP $end
$var wire 5 ) B [4:0] $end
$var wire 5 * A [4:0] $end
$scope module controller1 $end
$var wire 1 # clk $end
$var wire 1 $ reset $end
$var parameter 3 + FINISH $end
$var parameter 3 , ONE $end
$var parameter 3 - START $end
$var parameter 3 . THREE $end
$var parameter 3 / TWO $end
$var reg 5 0 A [4:0] $end
$var reg 5 1 B [4:0] $end
$var reg 1 ( OP $end
$var reg 3 2 nstate [2:0] $end
$var reg 3 3 pstate [2:0] $end
$upscope $end
$scope module datapath1 $end
$var wire 5 4 A [4:0] $end
$var wire 5 5 B [4:0] $end
$var wire 1 6 CF $end
$var wire 1 ( OP $end
$var wire 1 ' ZF $end
$var wire 1 7 SF $end
$var wire 5 8 R_ROL [4:0] $end
$var wire 5 9 R_AND [4:0] $end
$var reg 5 : R [4:0] $end
$scope module and1 $end
$var wire 5 ; A [4:0] $end
$var wire 5 < B [4:0] $end
$var wire 5 = R [4:0] $end
$upscope $end
$scope module rol1 $end
$var wire 5 > A [4:0] $end
$var wire 3 ? B [2:0] $end
$var reg 5 @ R [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10 /
b11 .
b0 -
b1 ,
b100 +
$end
#0
$dumpvars
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
07
06
b0 5
b0 4
b0 3
b1 2
b0 1
b0 0
b0 *
b0 )
0(
1'
b0 &
b0 %
1$
0#
b0 "
0!
$end
#5
1#
#10
0#
#15
1#
#20
0#
#25
1#
#30
0#
0$
#35
b11 ?
b111 8
b111 @
b10 2
b11 )
b11 1
b11 5
b11 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b1 3
1#
#40
0#
#45
1!
0'
17
b10010 "
b10010 %
b10010 &
b10010 :
b10 ?
b10010 8
b10010 @
b11 2
1(
b10 )
b10 1
b10 5
b10 <
b10100 *
b10100 0
b10100 4
b10100 ;
b10100 >
b10 3
1#
#50
0#
#55
07
b1110 "
b1110 %
b1110 &
b1110 :
b100 ?
b100 9
b100 =
b1110 8
b1110 @
b100 2
1(
b100 )
b100 1
b100 5
b100 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b11 3
1#
#60
0!
1'
b0 "
b0 %
b0 &
b0 :
b0 ?
b0 9
b0 =
b0 8
b0 @
b1 2
0(
b0 )
b0 1
b0 5
b0 <
b0 *
b0 0
b0 4
b0 ;
b0 >
b0 3
0#
1$
#65
1#
#70
0#
#75
1#
#80
0#
#85
1#
#90
0#
0$
#95
b11 ?
b111 8
b111 @
b10 2
b11 )
b11 1
b11 5
b11 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b1 3
1#
#100
0#
#105
1!
0'
17
b10010 "
b10010 %
b10010 &
b10010 :
b10 ?
b10010 8
b10010 @
b11 2
1(
b10 )
b10 1
b10 5
b10 <
b10100 *
b10100 0
b10100 4
b10100 ;
b10100 >
b10 3
1#
#110
0#
#115
07
b1110 "
b1110 %
b1110 &
b1110 :
b100 ?
b100 9
b100 =
b1110 8
b1110 @
b100 2
1(
b100 )
b100 1
b100 5
b100 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b11 3
1#
#120
0#
#125
0!
1'
b0 "
b0 %
b0 &
b0 :
b0 ?
b0 9
b0 =
b0 8
b0 @
b0 2
0(
b0 )
b0 1
b0 5
b0 <
b0 *
b0 0
b0 4
b0 ;
b0 >
b100 3
1#
#130
0#
#135
b1 2
b0 3
1#
#140
0#
#145
b11 ?
b111 8
b111 @
b10 2
b11 )
b11 1
b11 5
b11 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b1 3
1#
#150
0#
#155
1!
0'
17
b10010 "
b10010 %
b10010 &
b10010 :
b10 ?
b10010 8
b10010 @
b11 2
1(
b10 )
b10 1
b10 5
b10 <
b10100 *
b10100 0
b10100 4
b10100 ;
b10100 >
b10 3
1#
#160
0#
#165
07
b1110 "
b1110 %
b1110 &
b1110 :
b100 ?
b100 9
b100 =
b1110 8
b1110 @
b100 2
1(
b100 )
b100 1
b100 5
b100 <
b11100 *
b11100 0
b11100 4
b11100 ;
b11100 >
b11 3
1#
#170
0#
#175
0!
1'
b0 "
b0 %
b0 &
b0 :
b0 ?
b0 9
b0 =
b0 8
b0 @
b0 2
0(
b0 )
b0 1
b0 5
b0 <
b0 *
b0 0
b0 4
b0 ;
b0 >
b100 3
1#
#180
0#
#185
b1 2
b0 3
1#
#190
0#
