$date
	Tue Jun 10 23:57:48 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module ALU_tb $end
$var wire 1 ! CF $end
$var wire 1 " ZF $end
$var wire 1 # SF $end
$var wire 5 $ R [4:0] $end
$var reg 5 % A [4:0] $end
$var reg 5 & B [4:0] $end
$var reg 1 ' OP $end
$scope module uut $end
$var wire 5 ( A [4:0] $end
$var wire 5 ) B [4:0] $end
$var wire 1 ! CF $end
$var wire 1 ' OP $end
$var wire 1 " ZF $end
$var wire 1 # SF $end
$var wire 5 * R_ROL [4:0] $end
$var wire 5 + R_AND [4:0] $end
$var reg 5 , R [4:0] $end
$scope module and1 $end
$var wire 5 - A [4:0] $end
$var wire 5 . B [4:0] $end
$var wire 5 / R [4:0] $end
$upscope $end
$scope module rol1 $end
$var wire 5 0 A [4:0] $end
$var wire 3 1 B [2:0] $end
$var reg 5 2 R [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b11100 2
b0 1
b11100 0
b11000 /
b11000 .
b11100 -
b11000 ,
b11000 +
b11100 *
b11000 )
b11100 (
0'
b11000 &
b11100 %
b11000 $
1#
0"
0!
$end
#10000
b10010 $
b10010 ,
b10 1
b0 +
b0 /
b10010 *
b10010 2
1'
b10 &
b10 )
b10 .
b10100 %
b10100 (
b10100 -
b10100 0
#20000
0#
b1110 $
b1110 ,
b100 1
b100 +
b100 /
b1110 *
b1110 2
b100 &
b100 )
b100 .
b11100 %
b11100 (
b11100 -
b11100 0
#30000
b100 $
b100 ,
b111 *
b111 2
0'
b10100 &
b10100 )
b10100 .
b1110 %
b1110 (
b1110 -
b1110 0
#40000
